/* 
 * This file is part of the RTBServer distribution (https://github.com/yoori/rtbserver).
 * RTBServer is DSP server that allow to bid (see RTB auction) targeted ad
 * via RTB protocols (OpenRTB, Google AdExchange, Yandex RTB)
 *
 * Copyright (c) 2014 Yuri Kuznecov <yuri.kuznecov@gmail.com>.
 * 
 * This program is free software: you can redistribute it and/or modify  
 * it under the terms of the GNU General Public License as published by  
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _USER_INFO_SVCS_USER_INFO_MANAGER_CONTROL_IDL_
#define _USER_INFO_SVCS_USER_INFO_MANAGER_CONTROL_IDL_

#include <CORBACommons/Stats.idl>

module AdServer
{
  module UserInfoSvcs
  {
    typedef sequence<unsigned long> ChunkIdSeq;

    struct ChunksConfig
    {
      ChunkIdSeq chunk_ids;
      unsigned long common_chunks_number;
    };
    
    enum UserInfoManagerStatus
    {
      S_READY, // ready but not admited to cluster
      S_ADMITTED
    };
        
    interface UserInfoManagerControl
    {
      exception ImplementationException
      {
        string description;
      };

      void 
      get_source_info(out ChunksConfig user_info_source)
        raises(ImplementationException);

      /** get status from controlled services */
      UserInfoManagerStatus status() raises(ImplementationException);

      void admit() /* raises() */;
    };
  }; // module UserInfoSvcs
}; // module AdServer

#endif // _USER_INFO_SVCS_USER_INFO_SERVER_CONTROL_IDL_
