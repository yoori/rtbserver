/* 
 * This file is part of the RTBServer distribution (https://github.com/yoori/rtbserver).
 * RTBServer is DSP server that allow to bid (see RTB auction) targeted ad
 * via RTB protocols (OpenRTB, Google AdExchange, Yandex RTB)
 *
 * Copyright (c) 2014 Yuri Kuznecov <yuri.kuznecov@gmail.com>.
 * 
 * This program is free software: you can redistribute it and/or modify  
 * it under the terms of the GNU General Public License as published by  
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */


#ifndef AD_CHANNEL_SVCS_CHANNEL_MANAGER_CONTROLLER_IDL_
#define AD_CHANNEL_SVCS_CHANNEL_MANAGER_CONTROLLER_IDL_

#include <ChannelSvcs/ChannelCommons/ChannelCommons.idl>
#include <ChannelSvcs/ChannelServer/ChannelUpdateBase.idl>
#include <ChannelSvcs/ChannelServer/ChannelServer.idl>

module AdServer
{
  module ChannelSvcs
  {
    /* server data module*/
    module Protected
    {
      struct ChannelServerDescription
      {
        ChannelServer channel_server;
      };

      typedef sequence<ChannelServerDescription> ChannelServerDescriptionSeq;
      typedef sequence<ChannelServerDescriptionSeq> GroupDescriptionSeq;
    };

    /** ChannelServer Session */
    valuetype ChannelServerSession supports ChannelServerBase
    {
      private Protected::GroupDescriptionSeq channel_servers;
    };

    abstract interface ChannelLoadSessionBase
    {
      ChannelLoadSession get_load_session()
        raises(ImplementationException);
    };

    /**
     * ChannelManager doesn't doing anything now 
     */
    interface ChannelManagerController : ChannelLoadSessionBase
    {
      ChannelServerSession get_channel_session()
        raises(ImplementationException);
    };
    
  }; // module ChannelSvcs
  
}; // module AdServer

#endif //AD_CHANNEL_SVCS_CHANNEL_MANAGER_CONTROLLER_IDL_
